// <auto-generated />
using System;
using AIJobCareer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AIJobCareer.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250317071436_Datas")]
    partial class Datas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AIJobCareer.Models.Area", b =>
                {
                    b.Property<int>("AREA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AREA_ID"));

                    b.Property<string>("AREA_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AREA_ID");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("AIJobCareer.Models.CareerAnalysis", b =>
                {
                    b.Property<int>("ANALYSIS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ANALYSIS_ID"));

                    b.Property<string>("ANALYSIS_AI_CAREER_PROSPECTS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ANALYSIS_AI_DIRECTION")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ANALYSIS_AI_MARKET_GAP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ANALYSIS_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ANALYSIS_ID");

                    b.HasIndex("ANALYSIS_USER_ID");

                    b.ToTable("Career_Analysis");
                });

            modelBuilder.Entity("AIJobCareer.Models.Company", b =>
                {
                    b.Property<int>("COMPANY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("COMPANY_ID"));

                    b.Property<int?>("COMPANY_AREA_ID")
                        .HasColumnType("int");

                    b.Property<string>("COMPANY_ICON")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("COMPANY_INTRO")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("COMPANY_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("COMPANY_WEBSITE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("COMPANY_ID");

                    b.HasIndex("COMPANY_AREA_ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AIJobCareer.Models.Job", b =>
                {
                    b.Property<int>("JOB_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JOB_ID"));

                    b.Property<string>("JOB_BENEFIT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JOB_COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<string>("JOB_LOCATION")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("JOB_REQUIREMENT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("JOB_RESPONSIBLE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal?>("JOB_SALARY_MAX")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("JOB_SALARY_MIN")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("JOB_STATUS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("JOB_TITLE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("JOB_ID");

                    b.HasIndex("JOB_COMPANY_ID");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplication", b =>
                {
                    b.Property<int>("APPLICATION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("APPLICATION_ID"));

                    b.Property<int>("APPLICATION_JOB_ID")
                        .HasColumnType("int");

                    b.Property<string>("APPLICATION_STATUS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("APPLICATION_SUBMISSION_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("APPLICATION_TYPE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("APPLICATION_ID");

                    b.HasIndex("APPLICATION_JOB_ID");

                    b.ToTable("Job_Application");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplicationReview", b =>
                {
                    b.Property<int>("REVIEW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("REVIEW_ID"));

                    b.Property<int>("REVIEW_APPLICATION_ID")
                        .HasColumnType("int");

                    b.Property<int>("REVIEW_COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<string>("REVIEW_CONTEXT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("REVIEW_DATE")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("REVIEW_STATUS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("REVIEW_ID");

                    b.HasIndex("REVIEW_APPLICATION_ID");

                    b.HasIndex("REVIEW_COMPANY_ID");

                    b.ToTable("Job_Application_Review");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplicationTable", b =>
                {
                    b.Property<int>("TABLE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TABLE_ID"));

                    b.Property<int>("TABLE_APPLICATION_ID")
                        .HasColumnType("int");

                    b.Property<string>("TABLE_COVER_LETTER")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TABLE_RESUME_ID")
                        .HasColumnType("int");

                    b.HasKey("TABLE_ID");

                    b.HasIndex("TABLE_APPLICATION_ID");

                    b.HasIndex("TABLE_RESUME_ID");

                    b.ToTable("Job_Application_Table");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobSkill", b =>
                {
                    b.Property<int>("JS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JS_ID"));

                    b.Property<int>("JS_JOB_ID")
                        .HasColumnType("int");

                    b.Property<int>("JS_SKILL_ID")
                        .HasColumnType("int");

                    b.HasKey("JS_ID");

                    b.HasIndex("JS_JOB_ID");

                    b.HasIndex("JS_SKILL_ID");

                    b.ToTable("Job_Skill");
                });

            modelBuilder.Entity("AIJobCareer.Models.Notification", b =>
                {
                    b.Property<int>("NOTIFICATION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("NOTIFICATION_ID"));

                    b.Property<int?>("NOTIFICATION_COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<string>("NOTIFICATION_STATUS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NOTIFICATION_TEXT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("NOTIFICATION_TIMESTAMP")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("NOTIFICATION_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("NOTIFICATION_ID");

                    b.HasIndex("NOTIFICATION_COMPANY_ID");

                    b.HasIndex("NOTIFICATION_USER_ID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("AIJobCareer.Models.Resume", b =>
                {
                    b.Property<int>("RESUME_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RESUME_ID"));

                    b.Property<string>("RESUME_FILE")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("RESUME_LAST_MODIFY_TIME")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RESUME_TEXT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RESUME_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("RESUME_ID");

                    b.HasIndex("RESUME_USER_ID");

                    b.ToTable("Resume");
                });

            modelBuilder.Entity("AIJobCareer.Models.Skill", b =>
                {
                    b.Property<int>("SKILL_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SKILL_ID"));

                    b.Property<string>("SKILL_INFO")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SKILL_LEVEL")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SKILL_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SKILL_TYPE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("SKILL_ID");

                    b.ToTable("Skill");
                });

            modelBuilder.Entity("AIJobCareer.Models.User", b =>
                {
                    b.Property<int>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("USER_ID"));

                    b.Property<DateTime>("USER_ACCOUNT_CREATED_TIME")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("USER_AGE")
                        .HasColumnType("int");

                    b.Property<int?>("USER_AREA_ID")
                        .HasColumnType("int");

                    b.Property<string>("USER_CONTACT_NUMBER")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("USER_EMAIL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("USER_ICON")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("USER_INTRO")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("USER_NAME")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("USER_PASSWORD")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("USER_PRIVACY_STATUS")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("USER_ROLE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("USER_ID");

                    b.HasIndex("USER_AREA_ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("AIJobCareer.Models.UserApplication", b =>
                {
                    b.Property<int>("UA_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UA_ID"));

                    b.Property<int>("UA_APPLICATION_ID")
                        .HasColumnType("int");

                    b.Property<int>("UA_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("UA_ID");

                    b.HasIndex("UA_APPLICATION_ID");

                    b.HasIndex("UA_USER_ID");

                    b.ToTable("User_Application");
                });

            modelBuilder.Entity("AIJobCareer.Models.UserSkill", b =>
                {
                    b.Property<int>("US_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("US_ID"));

                    b.Property<int>("US_SKILL_ID")
                        .HasColumnType("int");

                    b.Property<int>("US_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("US_ID");

                    b.HasIndex("US_SKILL_ID");

                    b.HasIndex("US_USER_ID");

                    b.ToTable("USer_Skill");
                });

            modelBuilder.Entity("AIJobCareer.Models.CareerAnalysis", b =>
                {
                    b.HasOne("AIJobCareer.Models.User", "User")
                        .WithMany("CareerAnalyses")
                        .HasForeignKey("ANALYSIS_USER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AIJobCareer.Models.Company", b =>
                {
                    b.HasOne("AIJobCareer.Models.Area", "Area")
                        .WithMany("Companies")
                        .HasForeignKey("COMPANY_AREA_ID");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("AIJobCareer.Models.Job", b =>
                {
                    b.HasOne("AIJobCareer.Models.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("JOB_COMPANY_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplication", b =>
                {
                    b.HasOne("AIJobCareer.Models.Job", "Job")
                        .WithMany("JobApplications")
                        .HasForeignKey("APPLICATION_JOB_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplicationReview", b =>
                {
                    b.HasOne("AIJobCareer.Models.JobApplication", "JobApplication")
                        .WithMany("JobApplicationReviews")
                        .HasForeignKey("REVIEW_APPLICATION_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIJobCareer.Models.Company", "Company")
                        .WithMany("JobApplicationReviews")
                        .HasForeignKey("REVIEW_COMPANY_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("JobApplication");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplicationTable", b =>
                {
                    b.HasOne("AIJobCareer.Models.JobApplication", "JobApplication")
                        .WithMany("JobApplicationTables")
                        .HasForeignKey("TABLE_APPLICATION_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIJobCareer.Models.Resume", "Resume")
                        .WithMany("JobApplicationTables")
                        .HasForeignKey("TABLE_RESUME_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplication");

                    b.Navigation("Resume");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobSkill", b =>
                {
                    b.HasOne("AIJobCareer.Models.Job", "Job")
                        .WithMany("JobSkills")
                        .HasForeignKey("JS_JOB_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIJobCareer.Models.Skill", "Skill")
                        .WithMany("JobSkills")
                        .HasForeignKey("JS_SKILL_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("AIJobCareer.Models.Notification", b =>
                {
                    b.HasOne("AIJobCareer.Models.Company", "Company")
                        .WithMany("Notifications")
                        .HasForeignKey("NOTIFICATION_COMPANY_ID");

                    b.HasOne("AIJobCareer.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("NOTIFICATION_USER_ID");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AIJobCareer.Models.Resume", b =>
                {
                    b.HasOne("AIJobCareer.Models.User", "User")
                        .WithMany("Resumes")
                        .HasForeignKey("RESUME_USER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AIJobCareer.Models.User", b =>
                {
                    b.HasOne("AIJobCareer.Models.Area", "Area")
                        .WithMany("Users")
                        .HasForeignKey("USER_AREA_ID");

                    b.Navigation("Area");
                });

            modelBuilder.Entity("AIJobCareer.Models.UserApplication", b =>
                {
                    b.HasOne("AIJobCareer.Models.JobApplication", "JobApplication")
                        .WithMany("UserApplications")
                        .HasForeignKey("UA_APPLICATION_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIJobCareer.Models.User", "User")
                        .WithMany("UserApplications")
                        .HasForeignKey("UA_USER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplication");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AIJobCareer.Models.UserSkill", b =>
                {
                    b.HasOne("AIJobCareer.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("US_SKILL_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AIJobCareer.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("US_USER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AIJobCareer.Models.Area", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AIJobCareer.Models.Company", b =>
                {
                    b.Navigation("JobApplicationReviews");

                    b.Navigation("Jobs");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("AIJobCareer.Models.Job", b =>
                {
                    b.Navigation("JobApplications");

                    b.Navigation("JobSkills");
                });

            modelBuilder.Entity("AIJobCareer.Models.JobApplication", b =>
                {
                    b.Navigation("JobApplicationReviews");

                    b.Navigation("JobApplicationTables");

                    b.Navigation("UserApplications");
                });

            modelBuilder.Entity("AIJobCareer.Models.Resume", b =>
                {
                    b.Navigation("JobApplicationTables");
                });

            modelBuilder.Entity("AIJobCareer.Models.Skill", b =>
                {
                    b.Navigation("JobSkills");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("AIJobCareer.Models.User", b =>
                {
                    b.Navigation("CareerAnalyses");

                    b.Navigation("Notifications");

                    b.Navigation("Resumes");

                    b.Navigation("UserApplications");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
